
Traffic light control.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000ad6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000002  00800060  00000ad6  00000b6a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000001  00800062  00800062  00000b6c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000b6c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000b9c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000098  00000000  00000000  00000bd8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000ff3  00000000  00000000  00000c70  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000063c  00000000  00000000  00001c63  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000090e  00000000  00000000  0000229f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000168  00000000  00000000  00002bb0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000469  00000000  00000000  00002d18  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000063d  00000000  00000000  00003181  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a0  00000000  00000000  000037be  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 38 03 	jmp	0x670	; 0x670 <__vector_1>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e6 ed       	ldi	r30, 0xD6	; 214
  68:	fa e0       	ldi	r31, 0x0A	; 10
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a2 36       	cpi	r26, 0x62	; 98
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a2 e6       	ldi	r26, 0x62	; 98
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a3 36       	cpi	r26, 0x63	; 99
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 47 03 	call	0x68e	; 0x68e <main>
  8a:	0c 94 69 05 	jmp	0xad2	; 0xad2 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <DIO_init>:
		DIO_init(ButtonPort,ButtonPin,IN);

}

void BUTTON_read(uint8_t ButtonPort,uint8_t ButtonPin,uint8_t *value){
	DIO_read(ButtonPort,ButtonPin,value);
  92:	82 34       	cpi	r24, 0x42	; 66
  94:	31 f1       	breq	.+76     	; 0xe2 <DIO_init+0x50>
  96:	18 f4       	brcc	.+6      	; 0x9e <DIO_init+0xc>
  98:	81 34       	cpi	r24, 0x41	; 65
  9a:	39 f0       	breq	.+14     	; 0xaa <DIO_init+0x18>
  9c:	08 95       	ret
  9e:	83 34       	cpi	r24, 0x43	; 67
  a0:	e1 f1       	breq	.+120    	; 0x11a <DIO_init+0x88>
  a2:	84 34       	cpi	r24, 0x44	; 68
  a4:	09 f4       	brne	.+2      	; 0xa8 <DIO_init+0x16>
  a6:	54 c0       	rjmp	.+168    	; 0x150 <DIO_init+0xbe>
  a8:	08 95       	ret
  aa:	41 11       	cpse	r20, r1
  ac:	0c c0       	rjmp	.+24     	; 0xc6 <DIO_init+0x34>
  ae:	2a b3       	in	r18, 0x1a	; 26
  b0:	81 e0       	ldi	r24, 0x01	; 1
  b2:	90 e0       	ldi	r25, 0x00	; 0
  b4:	02 c0       	rjmp	.+4      	; 0xba <DIO_init+0x28>
  b6:	88 0f       	add	r24, r24
  b8:	99 1f       	adc	r25, r25
  ba:	6a 95       	dec	r22
  bc:	e2 f7       	brpl	.-8      	; 0xb6 <DIO_init+0x24>
  be:	80 95       	com	r24
  c0:	82 23       	and	r24, r18
  c2:	8a bb       	out	0x1a, r24	; 26
  c4:	08 95       	ret
  c6:	41 30       	cpi	r20, 0x01	; 1
  c8:	09 f0       	breq	.+2      	; 0xcc <DIO_init+0x3a>
  ca:	5c c0       	rjmp	.+184    	; 0x184 <DIO_init+0xf2>
  cc:	2a b3       	in	r18, 0x1a	; 26
  ce:	81 e0       	ldi	r24, 0x01	; 1
  d0:	90 e0       	ldi	r25, 0x00	; 0
  d2:	02 c0       	rjmp	.+4      	; 0xd8 <DIO_init+0x46>
  d4:	88 0f       	add	r24, r24
  d6:	99 1f       	adc	r25, r25
  d8:	6a 95       	dec	r22
  da:	e2 f7       	brpl	.-8      	; 0xd4 <DIO_init+0x42>
  dc:	82 2b       	or	r24, r18
  de:	8a bb       	out	0x1a, r24	; 26
  e0:	08 95       	ret
  e2:	41 11       	cpse	r20, r1
  e4:	0c c0       	rjmp	.+24     	; 0xfe <DIO_init+0x6c>
  e6:	27 b3       	in	r18, 0x17	; 23
  e8:	81 e0       	ldi	r24, 0x01	; 1
  ea:	90 e0       	ldi	r25, 0x00	; 0
  ec:	02 c0       	rjmp	.+4      	; 0xf2 <DIO_init+0x60>
  ee:	88 0f       	add	r24, r24
  f0:	99 1f       	adc	r25, r25
  f2:	6a 95       	dec	r22
  f4:	e2 f7       	brpl	.-8      	; 0xee <DIO_init+0x5c>
  f6:	80 95       	com	r24
  f8:	82 23       	and	r24, r18
  fa:	87 bb       	out	0x17, r24	; 23
  fc:	08 95       	ret
  fe:	41 30       	cpi	r20, 0x01	; 1
 100:	09 f0       	breq	.+2      	; 0x104 <DIO_init+0x72>
 102:	40 c0       	rjmp	.+128    	; 0x184 <DIO_init+0xf2>
 104:	27 b3       	in	r18, 0x17	; 23
 106:	81 e0       	ldi	r24, 0x01	; 1
 108:	90 e0       	ldi	r25, 0x00	; 0
 10a:	02 c0       	rjmp	.+4      	; 0x110 <DIO_init+0x7e>
 10c:	88 0f       	add	r24, r24
 10e:	99 1f       	adc	r25, r25
 110:	6a 95       	dec	r22
 112:	e2 f7       	brpl	.-8      	; 0x10c <DIO_init+0x7a>
 114:	82 2b       	or	r24, r18
 116:	87 bb       	out	0x17, r24	; 23
 118:	08 95       	ret
 11a:	41 11       	cpse	r20, r1
 11c:	0c c0       	rjmp	.+24     	; 0x136 <DIO_init+0xa4>
 11e:	24 b3       	in	r18, 0x14	; 20
 120:	81 e0       	ldi	r24, 0x01	; 1
 122:	90 e0       	ldi	r25, 0x00	; 0
 124:	02 c0       	rjmp	.+4      	; 0x12a <DIO_init+0x98>
 126:	88 0f       	add	r24, r24
 128:	99 1f       	adc	r25, r25
 12a:	6a 95       	dec	r22
 12c:	e2 f7       	brpl	.-8      	; 0x126 <DIO_init+0x94>
 12e:	80 95       	com	r24
 130:	82 23       	and	r24, r18
 132:	84 bb       	out	0x14, r24	; 20
 134:	08 95       	ret
 136:	41 30       	cpi	r20, 0x01	; 1
 138:	29 f5       	brne	.+74     	; 0x184 <DIO_init+0xf2>
 13a:	24 b3       	in	r18, 0x14	; 20
 13c:	81 e0       	ldi	r24, 0x01	; 1
 13e:	90 e0       	ldi	r25, 0x00	; 0
 140:	02 c0       	rjmp	.+4      	; 0x146 <DIO_init+0xb4>
 142:	88 0f       	add	r24, r24
 144:	99 1f       	adc	r25, r25
 146:	6a 95       	dec	r22
 148:	e2 f7       	brpl	.-8      	; 0x142 <DIO_init+0xb0>
 14a:	82 2b       	or	r24, r18
 14c:	84 bb       	out	0x14, r24	; 20
 14e:	08 95       	ret
 150:	41 11       	cpse	r20, r1
 152:	0c c0       	rjmp	.+24     	; 0x16c <DIO_init+0xda>
 154:	21 b3       	in	r18, 0x11	; 17
 156:	81 e0       	ldi	r24, 0x01	; 1
 158:	90 e0       	ldi	r25, 0x00	; 0
 15a:	02 c0       	rjmp	.+4      	; 0x160 <DIO_init+0xce>
 15c:	88 0f       	add	r24, r24
 15e:	99 1f       	adc	r25, r25
 160:	6a 95       	dec	r22
 162:	e2 f7       	brpl	.-8      	; 0x15c <DIO_init+0xca>
 164:	80 95       	com	r24
 166:	82 23       	and	r24, r18
 168:	81 bb       	out	0x11, r24	; 17
 16a:	08 95       	ret
 16c:	41 30       	cpi	r20, 0x01	; 1
 16e:	51 f4       	brne	.+20     	; 0x184 <DIO_init+0xf2>
 170:	21 b3       	in	r18, 0x11	; 17
 172:	81 e0       	ldi	r24, 0x01	; 1
 174:	90 e0       	ldi	r25, 0x00	; 0
 176:	02 c0       	rjmp	.+4      	; 0x17c <DIO_init+0xea>
 178:	88 0f       	add	r24, r24
 17a:	99 1f       	adc	r25, r25
 17c:	6a 95       	dec	r22
 17e:	e2 f7       	brpl	.-8      	; 0x178 <DIO_init+0xe6>
 180:	82 2b       	or	r24, r18
 182:	81 bb       	out	0x11, r24	; 17
 184:	08 95       	ret

00000186 <DIO_write>:
 186:	82 34       	cpi	r24, 0x42	; 66
 188:	31 f1       	breq	.+76     	; 0x1d6 <DIO_write+0x50>
 18a:	18 f4       	brcc	.+6      	; 0x192 <DIO_write+0xc>
 18c:	81 34       	cpi	r24, 0x41	; 65
 18e:	39 f0       	breq	.+14     	; 0x19e <DIO_write+0x18>
 190:	08 95       	ret
 192:	83 34       	cpi	r24, 0x43	; 67
 194:	e1 f1       	breq	.+120    	; 0x20e <DIO_write+0x88>
 196:	84 34       	cpi	r24, 0x44	; 68
 198:	09 f4       	brne	.+2      	; 0x19c <DIO_write+0x16>
 19a:	54 c0       	rjmp	.+168    	; 0x244 <DIO_write+0xbe>
 19c:	08 95       	ret
 19e:	41 11       	cpse	r20, r1
 1a0:	0c c0       	rjmp	.+24     	; 0x1ba <DIO_write+0x34>
 1a2:	2b b3       	in	r18, 0x1b	; 27
 1a4:	81 e0       	ldi	r24, 0x01	; 1
 1a6:	90 e0       	ldi	r25, 0x00	; 0
 1a8:	02 c0       	rjmp	.+4      	; 0x1ae <DIO_write+0x28>
 1aa:	88 0f       	add	r24, r24
 1ac:	99 1f       	adc	r25, r25
 1ae:	6a 95       	dec	r22
 1b0:	e2 f7       	brpl	.-8      	; 0x1aa <DIO_write+0x24>
 1b2:	80 95       	com	r24
 1b4:	82 23       	and	r24, r18
 1b6:	8b bb       	out	0x1b, r24	; 27
 1b8:	08 95       	ret
 1ba:	41 30       	cpi	r20, 0x01	; 1
 1bc:	09 f0       	breq	.+2      	; 0x1c0 <DIO_write+0x3a>
 1be:	5c c0       	rjmp	.+184    	; 0x278 <DIO_write+0xf2>
 1c0:	2b b3       	in	r18, 0x1b	; 27
 1c2:	81 e0       	ldi	r24, 0x01	; 1
 1c4:	90 e0       	ldi	r25, 0x00	; 0
 1c6:	02 c0       	rjmp	.+4      	; 0x1cc <DIO_write+0x46>
 1c8:	88 0f       	add	r24, r24
 1ca:	99 1f       	adc	r25, r25
 1cc:	6a 95       	dec	r22
 1ce:	e2 f7       	brpl	.-8      	; 0x1c8 <DIO_write+0x42>
 1d0:	82 2b       	or	r24, r18
 1d2:	8b bb       	out	0x1b, r24	; 27
 1d4:	08 95       	ret
 1d6:	41 11       	cpse	r20, r1
 1d8:	0c c0       	rjmp	.+24     	; 0x1f2 <DIO_write+0x6c>
 1da:	28 b3       	in	r18, 0x18	; 24
 1dc:	81 e0       	ldi	r24, 0x01	; 1
 1de:	90 e0       	ldi	r25, 0x00	; 0
 1e0:	02 c0       	rjmp	.+4      	; 0x1e6 <DIO_write+0x60>
 1e2:	88 0f       	add	r24, r24
 1e4:	99 1f       	adc	r25, r25
 1e6:	6a 95       	dec	r22
 1e8:	e2 f7       	brpl	.-8      	; 0x1e2 <DIO_write+0x5c>
 1ea:	80 95       	com	r24
 1ec:	82 23       	and	r24, r18
 1ee:	88 bb       	out	0x18, r24	; 24
 1f0:	08 95       	ret
 1f2:	41 30       	cpi	r20, 0x01	; 1
 1f4:	09 f0       	breq	.+2      	; 0x1f8 <DIO_write+0x72>
 1f6:	40 c0       	rjmp	.+128    	; 0x278 <DIO_write+0xf2>
 1f8:	28 b3       	in	r18, 0x18	; 24
 1fa:	81 e0       	ldi	r24, 0x01	; 1
 1fc:	90 e0       	ldi	r25, 0x00	; 0
 1fe:	02 c0       	rjmp	.+4      	; 0x204 <DIO_write+0x7e>
 200:	88 0f       	add	r24, r24
 202:	99 1f       	adc	r25, r25
 204:	6a 95       	dec	r22
 206:	e2 f7       	brpl	.-8      	; 0x200 <DIO_write+0x7a>
 208:	82 2b       	or	r24, r18
 20a:	88 bb       	out	0x18, r24	; 24
 20c:	08 95       	ret
 20e:	41 11       	cpse	r20, r1
 210:	0c c0       	rjmp	.+24     	; 0x22a <DIO_write+0xa4>
 212:	25 b3       	in	r18, 0x15	; 21
 214:	81 e0       	ldi	r24, 0x01	; 1
 216:	90 e0       	ldi	r25, 0x00	; 0
 218:	02 c0       	rjmp	.+4      	; 0x21e <DIO_write+0x98>
 21a:	88 0f       	add	r24, r24
 21c:	99 1f       	adc	r25, r25
 21e:	6a 95       	dec	r22
 220:	e2 f7       	brpl	.-8      	; 0x21a <DIO_write+0x94>
 222:	80 95       	com	r24
 224:	82 23       	and	r24, r18
 226:	85 bb       	out	0x15, r24	; 21
 228:	08 95       	ret
 22a:	41 30       	cpi	r20, 0x01	; 1
 22c:	29 f5       	brne	.+74     	; 0x278 <DIO_write+0xf2>
 22e:	25 b3       	in	r18, 0x15	; 21
 230:	81 e0       	ldi	r24, 0x01	; 1
 232:	90 e0       	ldi	r25, 0x00	; 0
 234:	02 c0       	rjmp	.+4      	; 0x23a <DIO_write+0xb4>
 236:	88 0f       	add	r24, r24
 238:	99 1f       	adc	r25, r25
 23a:	6a 95       	dec	r22
 23c:	e2 f7       	brpl	.-8      	; 0x236 <DIO_write+0xb0>
 23e:	82 2b       	or	r24, r18
 240:	85 bb       	out	0x15, r24	; 21
 242:	08 95       	ret
 244:	41 11       	cpse	r20, r1
 246:	0c c0       	rjmp	.+24     	; 0x260 <DIO_write+0xda>
 248:	22 b3       	in	r18, 0x12	; 18
 24a:	81 e0       	ldi	r24, 0x01	; 1
 24c:	90 e0       	ldi	r25, 0x00	; 0
 24e:	02 c0       	rjmp	.+4      	; 0x254 <DIO_write+0xce>
 250:	88 0f       	add	r24, r24
 252:	99 1f       	adc	r25, r25
 254:	6a 95       	dec	r22
 256:	e2 f7       	brpl	.-8      	; 0x250 <DIO_write+0xca>
 258:	80 95       	com	r24
 25a:	82 23       	and	r24, r18
 25c:	82 bb       	out	0x12, r24	; 18
 25e:	08 95       	ret
 260:	41 30       	cpi	r20, 0x01	; 1
 262:	51 f4       	brne	.+20     	; 0x278 <DIO_write+0xf2>
 264:	22 b3       	in	r18, 0x12	; 18
 266:	81 e0       	ldi	r24, 0x01	; 1
 268:	90 e0       	ldi	r25, 0x00	; 0
 26a:	02 c0       	rjmp	.+4      	; 0x270 <DIO_write+0xea>
 26c:	88 0f       	add	r24, r24
 26e:	99 1f       	adc	r25, r25
 270:	6a 95       	dec	r22
 272:	e2 f7       	brpl	.-8      	; 0x26c <DIO_write+0xe6>
 274:	82 2b       	or	r24, r18
 276:	82 bb       	out	0x12, r24	; 18
 278:	08 95       	ret

0000027a <LED_init>:
 27a:	41 e0       	ldi	r20, 0x01	; 1
 27c:	0e 94 49 00 	call	0x92	; 0x92 <DIO_init>
 280:	08 95       	ret

00000282 <LED_on>:
 282:	41 e0       	ldi	r20, 0x01	; 1
 284:	0e 94 c3 00 	call	0x186	; 0x186 <DIO_write>
 288:	08 95       	ret

0000028a <LED_off>:
 28a:	40 e0       	ldi	r20, 0x00	; 0
 28c:	0e 94 c3 00 	call	0x186	; 0x186 <DIO_write>
 290:	08 95       	ret

00000292 <TIMER0_init>:
 292:	13 be       	out	0x33, r1	; 51
 294:	08 95       	ret

00000296 <TIMER0_delay>:
 296:	8f 92       	push	r8
 298:	9f 92       	push	r9
 29a:	af 92       	push	r10
 29c:	bf 92       	push	r11
 29e:	cf 92       	push	r12
 2a0:	df 92       	push	r13
 2a2:	ef 92       	push	r14
 2a4:	ff 92       	push	r15
 2a6:	cf 93       	push	r28
 2a8:	df 93       	push	r29
 2aa:	bc 01       	movw	r22, r24
 2ac:	83 b7       	in	r24, 0x33	; 51
 2ae:	84 60       	ori	r24, 0x04	; 4
 2b0:	83 bf       	out	0x33, r24	; 51
 2b2:	80 e0       	ldi	r24, 0x00	; 0
 2b4:	90 e0       	ldi	r25, 0x00	; 0
 2b6:	0e 94 71 04 	call	0x8e2	; 0x8e2 <__floatunsisf>
 2ba:	6b 01       	movw	r12, r22
 2bc:	7c 01       	movw	r14, r24
 2be:	2f e6       	ldi	r18, 0x6F	; 111
 2c0:	32 e1       	ldi	r19, 0x12	; 18
 2c2:	43 e8       	ldi	r20, 0x83	; 131
 2c4:	52 e4       	ldi	r21, 0x42	; 66
 2c6:	0e 94 40 05 	call	0xa80	; 0xa80 <__gesf2>
 2ca:	18 16       	cp	r1, r24
 2cc:	7c f5       	brge	.+94     	; 0x32c <TIMER0_delay+0x96>
 2ce:	2f e6       	ldi	r18, 0x6F	; 111
 2d0:	32 e1       	ldi	r19, 0x12	; 18
 2d2:	43 e8       	ldi	r20, 0x83	; 131
 2d4:	52 e4       	ldi	r21, 0x42	; 66
 2d6:	c7 01       	movw	r24, r14
 2d8:	b6 01       	movw	r22, r12
 2da:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <__divsf3>
 2de:	0e 94 b9 03 	call	0x772	; 0x772 <ceil>
 2e2:	0e 94 42 04 	call	0x884	; 0x884 <__fixunssfsi>
 2e6:	4b 01       	movw	r8, r22
 2e8:	5c 01       	movw	r10, r24
 2ea:	eb 01       	movw	r28, r22
 2ec:	2f e6       	ldi	r18, 0x6F	; 111
 2ee:	32 e1       	ldi	r19, 0x12	; 18
 2f0:	43 e8       	ldi	r20, 0x83	; 131
 2f2:	5e e3       	ldi	r21, 0x3E	; 62
 2f4:	c7 01       	movw	r24, r14
 2f6:	b6 01       	movw	r22, r12
 2f8:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <__divsf3>
 2fc:	6b 01       	movw	r12, r22
 2fe:	7c 01       	movw	r14, r24
 300:	b4 01       	movw	r22, r8
 302:	80 e0       	ldi	r24, 0x00	; 0
 304:	90 e0       	ldi	r25, 0x00	; 0
 306:	0e 94 71 04 	call	0x8e2	; 0x8e2 <__floatunsisf>
 30a:	9b 01       	movw	r18, r22
 30c:	ac 01       	movw	r20, r24
 30e:	c7 01       	movw	r24, r14
 310:	b6 01       	movw	r22, r12
 312:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <__divsf3>
 316:	9b 01       	movw	r18, r22
 318:	ac 01       	movw	r20, r24
 31a:	60 e0       	ldi	r22, 0x00	; 0
 31c:	70 e0       	ldi	r23, 0x00	; 0
 31e:	80 e8       	ldi	r24, 0x80	; 128
 320:	93 e4       	ldi	r25, 0x43	; 67
 322:	0e 94 4c 03 	call	0x698	; 0x698 <__subsf3>
 326:	0e 94 42 04 	call	0x884	; 0x884 <__fixunssfsi>
 32a:	12 c0       	rjmp	.+36     	; 0x350 <TIMER0_delay+0xba>
 32c:	a7 01       	movw	r20, r14
 32e:	96 01       	movw	r18, r12
 330:	6f e6       	ldi	r22, 0x6F	; 111
 332:	72 e1       	ldi	r23, 0x12	; 18
 334:	83 e8       	ldi	r24, 0x83	; 131
 336:	92 e4       	ldi	r25, 0x42	; 66
 338:	0e 94 4c 03 	call	0x698	; 0x698 <__subsf3>
 33c:	2f e6       	ldi	r18, 0x6F	; 111
 33e:	32 e1       	ldi	r19, 0x12	; 18
 340:	43 e8       	ldi	r20, 0x83	; 131
 342:	5e e3       	ldi	r21, 0x3E	; 62
 344:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <__divsf3>
 348:	0e 94 42 04 	call	0x884	; 0x884 <__fixunssfsi>
 34c:	c1 e0       	ldi	r28, 0x01	; 1
 34e:	d0 e0       	ldi	r29, 0x00	; 0
 350:	62 bf       	out	0x32, r22	; 50
 352:	20 e0       	ldi	r18, 0x00	; 0
 354:	30 e0       	ldi	r19, 0x00	; 0
 356:	08 c0       	rjmp	.+16     	; 0x368 <TIMER0_delay+0xd2>
 358:	08 b6       	in	r0, 0x38	; 56
 35a:	00 fe       	sbrs	r0, 0
 35c:	fd cf       	rjmp	.-6      	; 0x358 <TIMER0_delay+0xc2>
 35e:	88 b7       	in	r24, 0x38	; 56
 360:	81 60       	ori	r24, 0x01	; 1
 362:	88 bf       	out	0x38, r24	; 56
 364:	2f 5f       	subi	r18, 0xFF	; 255
 366:	3f 4f       	sbci	r19, 0xFF	; 255
 368:	2c 17       	cp	r18, r28
 36a:	3d 07       	cpc	r19, r29
 36c:	a8 f3       	brcs	.-22     	; 0x358 <TIMER0_delay+0xc2>
 36e:	13 be       	out	0x33, r1	; 51
 370:	df 91       	pop	r29
 372:	cf 91       	pop	r28
 374:	ff 90       	pop	r15
 376:	ef 90       	pop	r14
 378:	df 90       	pop	r13
 37a:	cf 90       	pop	r12
 37c:	bf 90       	pop	r11
 37e:	af 90       	pop	r10
 380:	9f 90       	pop	r9
 382:	8f 90       	pop	r8
 384:	08 95       	ret

00000386 <BUTTON_init>:
 386:	40 e0       	ldi	r20, 0x00	; 0
 388:	0e 94 49 00 	call	0x92	; 0x92 <DIO_init>
 38c:	08 95       	ret

0000038e <APP_init>:
#include "App.h"


uint8_t Car_LED = green,Car_prev_LED = yellow, mode = normal;
void APP_init(void){
	LED_init(LED_Car_Port,LED_Car_red_pin);
 38e:	60 e0       	ldi	r22, 0x00	; 0
 390:	81 e4       	ldi	r24, 0x41	; 65
 392:	0e 94 3d 01 	call	0x27a	; 0x27a <LED_init>
	LED_init(LED_Car_Port,LED_Car_Yellow_pin);
 396:	61 e0       	ldi	r22, 0x01	; 1
 398:	81 e4       	ldi	r24, 0x41	; 65
 39a:	0e 94 3d 01 	call	0x27a	; 0x27a <LED_init>
	LED_init(LED_Car_Port,LED_Car_Green_Pin);
 39e:	62 e0       	ldi	r22, 0x02	; 2
 3a0:	81 e4       	ldi	r24, 0x41	; 65
 3a2:	0e 94 3d 01 	call	0x27a	; 0x27a <LED_init>
	
	LED_init(LED_Pedestrian_Port,LED_Pedestrian_red_pin);
 3a6:	60 e0       	ldi	r22, 0x00	; 0
 3a8:	82 e4       	ldi	r24, 0x42	; 66
 3aa:	0e 94 3d 01 	call	0x27a	; 0x27a <LED_init>
	LED_init(LED_Pedestrian_Port,LED_Pedestrian_Yellow_pin);
 3ae:	61 e0       	ldi	r22, 0x01	; 1
 3b0:	82 e4       	ldi	r24, 0x42	; 66
 3b2:	0e 94 3d 01 	call	0x27a	; 0x27a <LED_init>
	LED_init(LED_Pedestrian_Port,LED_Pedestrian_Green_Pin);
 3b6:	62 e0       	ldi	r22, 0x02	; 2
 3b8:	82 e4       	ldi	r24, 0x42	; 66
 3ba:	0e 94 3d 01 	call	0x27a	; 0x27a <LED_init>
	
	TIMER0_init();
 3be:	0e 94 49 01 	call	0x292	; 0x292 <TIMER0_init>
	
	BUTTON_init(Button_Port,Button_Pin);
 3c2:	62 e0       	ldi	r22, 0x02	; 2
 3c4:	84 e4       	ldi	r24, 0x44	; 68
 3c6:	0e 94 c3 01 	call	0x386	; 0x386 <BUTTON_init>
	
	sei();
 3ca:	78 94       	sei
	RISING_EDGE_SETUP();
 3cc:	85 b7       	in	r24, 0x35	; 53
 3ce:	83 60       	ori	r24, 0x03	; 3
 3d0:	85 bf       	out	0x35, r24	; 53
	SETUP_INT0 ();
 3d2:	8b b7       	in	r24, 0x3b	; 59
 3d4:	80 64       	ori	r24, 0x40	; 64
 3d6:	8b bf       	out	0x3b, r24	; 59
 3d8:	08 95       	ret

000003da <APP_start>:
	
}
void APP_start(void){
 3da:	1f 93       	push	r17
 3dc:	cf 93       	push	r28
 3de:	df 93       	push	r29
	
	if (mode == normal || Car_LED == green || Car_LED == yellow){
 3e0:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__data_end>
 3e4:	88 23       	and	r24, r24
 3e6:	39 f0       	breq	.+14     	; 0x3f6 <APP_start+0x1c>
 3e8:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <Car_LED>
 3ec:	92 30       	cpi	r25, 0x02	; 2
 3ee:	19 f0       	breq	.+6      	; 0x3f6 <APP_start+0x1c>
 3f0:	91 30       	cpi	r25, 0x01	; 1
 3f2:	09 f0       	breq	.+2      	; 0x3f6 <APP_start+0x1c>
 3f4:	dd c0       	rjmp	.+442    	; 0x5b0 <__EEPROM_REGION_LENGTH__+0x1b0>
		if (mode == Pedestrian){
 3f6:	81 30       	cpi	r24, 0x01	; 1
 3f8:	11 f4       	brne	.+4      	; 0x3fe <APP_start+0x24>
			Car_LED = yellow;
 3fa:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <Car_LED>
		}
		
		LED_off(LED_Pedestrian_Port,LED_Pedestrian_red_pin);
 3fe:	60 e0       	ldi	r22, 0x00	; 0
 400:	82 e4       	ldi	r24, 0x42	; 66
 402:	0e 94 45 01 	call	0x28a	; 0x28a <LED_off>
		LED_off(LED_Pedestrian_Port,LED_Pedestrian_Yellow_pin);
 406:	61 e0       	ldi	r22, 0x01	; 1
 408:	82 e4       	ldi	r24, 0x42	; 66
 40a:	0e 94 45 01 	call	0x28a	; 0x28a <LED_off>
		LED_off(LED_Pedestrian_Port,LED_Pedestrian_Green_Pin);
 40e:	62 e0       	ldi	r22, 0x02	; 2
 410:	82 e4       	ldi	r24, 0x42	; 66
 412:	0e 94 45 01 	call	0x28a	; 0x28a <LED_off>
		
		switch(Car_LED){
 416:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <Car_LED>
 41a:	81 30       	cpi	r24, 0x01	; 1
 41c:	31 f0       	breq	.+12     	; 0x42a <__EEPROM_REGION_LENGTH__+0x2a>
 41e:	08 f4       	brcc	.+2      	; 0x422 <__EEPROM_REGION_LENGTH__+0x22>
 420:	83 c0       	rjmp	.+262    	; 0x528 <__EEPROM_REGION_LENGTH__+0x128>
 422:	82 30       	cpi	r24, 0x02	; 2
 424:	09 f4       	brne	.+2      	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
 426:	9f c0       	rjmp	.+318    	; 0x566 <__EEPROM_REGION_LENGTH__+0x166>
 428:	bd c0       	rjmp	.+378    	; 0x5a4 <__EEPROM_REGION_LENGTH__+0x1a4>
						
			case yellow :
			if (mode == Pedestrian){
 42a:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__data_end>
 42e:	81 30       	cpi	r24, 0x01	; 1
 430:	09 f0       	breq	.+2      	; 0x434 <__EEPROM_REGION_LENGTH__+0x34>
 432:	5b c0       	rjmp	.+182    	; 0x4ea <__EEPROM_REGION_LENGTH__+0xea>
				if (Car_prev_LED!= red){
 434:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 438:	88 23       	and	r24, r24
 43a:	61 f1       	breq	.+88     	; 0x494 <__EEPROM_REGION_LENGTH__+0x94>
					LED_on(LED_Pedestrian_Port,LED_Pedestrian_red_pin);
 43c:	60 e0       	ldi	r22, 0x00	; 0
 43e:	82 e4       	ldi	r24, 0x42	; 66
 440:	0e 94 41 01 	call	0x282	; 0x282 <LED_on>
					for (uint8_t i;i<5;i++){
 444:	25 c0       	rjmp	.+74     	; 0x490 <__EEPROM_REGION_LENGTH__+0x90>
						LED_on(LED_Car_Port,LED_Car_Yellow_pin);
 446:	61 e0       	ldi	r22, 0x01	; 1
 448:	81 e4       	ldi	r24, 0x41	; 65
 44a:	0e 94 41 01 	call	0x282	; 0x282 <LED_on>
						LED_on(LED_Pedestrian_Port,LED_Pedestrian_Yellow_pin);
 44e:	61 e0       	ldi	r22, 0x01	; 1
 450:	82 e4       	ldi	r24, 0x42	; 66
 452:	0e 94 41 01 	call	0x282	; 0x282 <LED_on>
						TIMER0_delay(390);
 456:	86 e8       	ldi	r24, 0x86	; 134
 458:	91 e0       	ldi	r25, 0x01	; 1
 45a:	0e 94 4b 01 	call	0x296	; 0x296 <TIMER0_delay>
						LED_off(LED_Car_Port,LED_Car_Yellow_pin);
 45e:	61 e0       	ldi	r22, 0x01	; 1
 460:	81 e4       	ldi	r24, 0x41	; 65
 462:	0e 94 45 01 	call	0x28a	; 0x28a <LED_off>
						LED_off(LED_Pedestrian_Port,LED_Pedestrian_Yellow_pin);
 466:	61 e0       	ldi	r22, 0x01	; 1
 468:	82 e4       	ldi	r24, 0x42	; 66
 46a:	0e 94 45 01 	call	0x28a	; 0x28a <LED_off>
						TIMER0_delay(190);
 46e:	8e eb       	ldi	r24, 0xBE	; 190
 470:	90 e0       	ldi	r25, 0x00	; 0
 472:	0e 94 4b 01 	call	0x296	; 0x296 <TIMER0_delay>
						LED_on(LED_Car_Port,LED_Car_Yellow_pin);
 476:	61 e0       	ldi	r22, 0x01	; 1
 478:	81 e4       	ldi	r24, 0x41	; 65
 47a:	0e 94 41 01 	call	0x282	; 0x282 <LED_on>
						LED_on(LED_Pedestrian_Port,LED_Pedestrian_Yellow_pin);
 47e:	61 e0       	ldi	r22, 0x01	; 1
 480:	82 e4       	ldi	r24, 0x42	; 66
 482:	0e 94 41 01 	call	0x282	; 0x282 <LED_on>
						TIMER0_delay(390);
 486:	86 e8       	ldi	r24, 0x86	; 134
 488:	91 e0       	ldi	r25, 0x01	; 1
 48a:	0e 94 4b 01 	call	0x296	; 0x296 <TIMER0_delay>
						
			case yellow :
			if (mode == Pedestrian){
				if (Car_prev_LED!= red){
					LED_on(LED_Pedestrian_Port,LED_Pedestrian_red_pin);
					for (uint8_t i;i<5;i++){
 48e:	1f 5f       	subi	r17, 0xFF	; 255
 490:	15 30       	cpi	r17, 0x05	; 5
 492:	c8 f2       	brcs	.-78     	; 0x446 <__EEPROM_REGION_LENGTH__+0x46>
						LED_on(LED_Car_Port,LED_Car_Yellow_pin);
						LED_on(LED_Pedestrian_Port,LED_Pedestrian_Yellow_pin);
						TIMER0_delay(390);
					}
				}
				Car_prev_LED = yellow;
 494:	81 e0       	ldi	r24, 0x01	; 1
 496:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
				Car_LED = red;
 49a:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <Car_LED>
				LED_on(LED_Car_Port,LED_Car_red_pin);
 49e:	60 e0       	ldi	r22, 0x00	; 0
 4a0:	81 e4       	ldi	r24, 0x41	; 65
 4a2:	0e 94 41 01 	call	0x282	; 0x282 <LED_on>
 4a6:	24 c0       	rjmp	.+72     	; 0x4f0 <__EEPROM_REGION_LENGTH__+0xf0>
			}
			else{
				for (uint8_t i = 0 ; i<5;i++){
					LED_on(LED_Car_Port,LED_Car_Yellow_pin);
 4a8:	61 e0       	ldi	r22, 0x01	; 1
 4aa:	81 e4       	ldi	r24, 0x41	; 65
 4ac:	0e 94 41 01 	call	0x282	; 0x282 <LED_on>
					TIMER0_delay(380);
 4b0:	8c e7       	ldi	r24, 0x7C	; 124
 4b2:	91 e0       	ldi	r25, 0x01	; 1
 4b4:	0e 94 4b 01 	call	0x296	; 0x296 <TIMER0_delay>
					LED_off(LED_Car_Port,LED_Car_Yellow_pin);
 4b8:	61 e0       	ldi	r22, 0x01	; 1
 4ba:	81 e4       	ldi	r24, 0x41	; 65
 4bc:	0e 94 45 01 	call	0x28a	; 0x28a <LED_off>
					TIMER0_delay(180);
 4c0:	84 eb       	ldi	r24, 0xB4	; 180
 4c2:	90 e0       	ldi	r25, 0x00	; 0
 4c4:	0e 94 4b 01 	call	0x296	; 0x296 <TIMER0_delay>
					LED_on(LED_Car_Port,LED_Car_Yellow_pin);
 4c8:	61 e0       	ldi	r22, 0x01	; 1
 4ca:	81 e4       	ldi	r24, 0x41	; 65
 4cc:	0e 94 41 01 	call	0x282	; 0x282 <LED_on>
					TIMER0_delay (380);
 4d0:	8c e7       	ldi	r24, 0x7C	; 124
 4d2:	91 e0       	ldi	r25, 0x01	; 1
 4d4:	0e 94 4b 01 	call	0x296	; 0x296 <TIMER0_delay>
					if (mode == Pedestrian){
 4d8:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__data_end>
 4dc:	81 30       	cpi	r24, 0x01	; 1
 4de:	19 f4       	brne	.+6      	; 0x4e6 <__EEPROM_REGION_LENGTH__+0xe6>
						Car_prev_LED = yellow;
 4e0:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
						break;
 4e4:	05 c0       	rjmp	.+10     	; 0x4f0 <__EEPROM_REGION_LENGTH__+0xf0>
				Car_prev_LED = yellow;
				Car_LED = red;
				LED_on(LED_Car_Port,LED_Car_red_pin);
			}
			else{
				for (uint8_t i = 0 ; i<5;i++){
 4e6:	cf 5f       	subi	r28, 0xFF	; 255
 4e8:	01 c0       	rjmp	.+2      	; 0x4ec <__EEPROM_REGION_LENGTH__+0xec>
 4ea:	c0 e0       	ldi	r28, 0x00	; 0
 4ec:	c5 30       	cpi	r28, 0x05	; 5
 4ee:	e0 f2       	brcs	.-72     	; 0x4a8 <__EEPROM_REGION_LENGTH__+0xa8>
						Car_prev_LED = yellow;
						break;
					}
				}
			}
			LED_off(LED_Car_Port,LED_Car_Yellow_pin);
 4f0:	61 e0       	ldi	r22, 0x01	; 1
 4f2:	81 e4       	ldi	r24, 0x41	; 65
 4f4:	0e 94 45 01 	call	0x28a	; 0x28a <LED_off>
			LED_off(LED_Pedestrian_Port,LED_Pedestrian_Yellow_pin);
 4f8:	61 e0       	ldi	r22, 0x01	; 1
 4fa:	82 e4       	ldi	r24, 0x42	; 66
 4fc:	0e 94 45 01 	call	0x28a	; 0x28a <LED_off>
			if (Car_prev_LED == red){
 500:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 504:	81 11       	cpse	r24, r1
 506:	07 c0       	rjmp	.+14     	; 0x516 <__EEPROM_REGION_LENGTH__+0x116>
				Car_LED = green;
 508:	82 e0       	ldi	r24, 0x02	; 2
 50a:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <Car_LED>
				Car_prev_LED = yellow;
 50e:	81 e0       	ldi	r24, 0x01	; 1
 510:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 514:	a9 c0       	rjmp	.+338    	; 0x668 <__EEPROM_REGION_LENGTH__+0x268>
			}
			else if (Car_prev_LED == green)
 516:	82 30       	cpi	r24, 0x02	; 2
 518:	09 f0       	breq	.+2      	; 0x51c <__EEPROM_REGION_LENGTH__+0x11c>
 51a:	a6 c0       	rjmp	.+332    	; 0x668 <__EEPROM_REGION_LENGTH__+0x268>
			{
				Car_LED = red;
 51c:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <Car_LED>
				Car_prev_LED = yellow;
 520:	81 e0       	ldi	r24, 0x01	; 1
 522:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 526:	a0 c0       	rjmp	.+320    	; 0x668 <__EEPROM_REGION_LENGTH__+0x268>
			}
			break;
			
			case red :
			LED_on(LED_Car_Port,LED_Car_red_pin);
 528:	60 e0       	ldi	r22, 0x00	; 0
 52a:	81 e4       	ldi	r24, 0x41	; 65
 52c:	0e 94 41 01 	call	0x282	; 0x282 <LED_on>
			LED_off(LED_Car_Port,LED_Car_Yellow_pin);
 530:	61 e0       	ldi	r22, 0x01	; 1
 532:	81 e4       	ldi	r24, 0x41	; 65
 534:	0e 94 45 01 	call	0x28a	; 0x28a <LED_off>
			LED_off(LED_Car_Port,LED_Car_Green_Pin);
 538:	62 e0       	ldi	r22, 0x02	; 2
 53a:	81 e4       	ldi	r24, 0x41	; 65
 53c:	0e 94 45 01 	call	0x28a	; 0x28a <LED_off>
			for (uint8_t i=0; i<50 ;i++)
 540:	c0 e0       	ldi	r28, 0x00	; 0
 542:	09 c0       	rjmp	.+18     	; 0x556 <__EEPROM_REGION_LENGTH__+0x156>
			{
				TIMER0_delay(68);
 544:	84 e4       	ldi	r24, 0x44	; 68
 546:	90 e0       	ldi	r25, 0x00	; 0
 548:	0e 94 4b 01 	call	0x296	; 0x296 <TIMER0_delay>
				if (mode == Pedestrian){
 54c:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__data_end>
 550:	81 30       	cpi	r24, 0x01	; 1
 552:	19 f0       	breq	.+6      	; 0x55a <__EEPROM_REGION_LENGTH__+0x15a>
			
			case red :
			LED_on(LED_Car_Port,LED_Car_red_pin);
			LED_off(LED_Car_Port,LED_Car_Yellow_pin);
			LED_off(LED_Car_Port,LED_Car_Green_Pin);
			for (uint8_t i=0; i<50 ;i++)
 554:	cf 5f       	subi	r28, 0xFF	; 255
 556:	c2 33       	cpi	r28, 0x32	; 50
 558:	a8 f3       	brcs	.-22     	; 0x544 <__EEPROM_REGION_LENGTH__+0x144>
				TIMER0_delay(68);
				if (mode == Pedestrian){
					break;
				}
			}
			Car_prev_LED = red;
 55a:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
			Car_LED = yellow;
 55e:	81 e0       	ldi	r24, 0x01	; 1
 560:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <Car_LED>
			break;
 564:	81 c0       	rjmp	.+258    	; 0x668 <__EEPROM_REGION_LENGTH__+0x268>
			
			
			case green :
			LED_on(LED_Car_Port,LED_Car_Green_Pin);
 566:	62 e0       	ldi	r22, 0x02	; 2
 568:	81 e4       	ldi	r24, 0x41	; 65
 56a:	0e 94 41 01 	call	0x282	; 0x282 <LED_on>
			LED_off(LED_Car_Port,LED_Car_red_pin);
 56e:	60 e0       	ldi	r22, 0x00	; 0
 570:	81 e4       	ldi	r24, 0x41	; 65
 572:	0e 94 45 01 	call	0x28a	; 0x28a <LED_off>
			LED_off(LED_Car_Port,LED_Car_Yellow_pin);
 576:	61 e0       	ldi	r22, 0x01	; 1
 578:	81 e4       	ldi	r24, 0x41	; 65
 57a:	0e 94 45 01 	call	0x28a	; 0x28a <LED_off>
			
			
			for (uint8_t i; i<150;i++){
 57e:	09 c0       	rjmp	.+18     	; 0x592 <__EEPROM_REGION_LENGTH__+0x192>
				TIMER0_delay(68);
 580:	84 e4       	ldi	r24, 0x44	; 68
 582:	90 e0       	ldi	r25, 0x00	; 0
 584:	0e 94 4b 01 	call	0x296	; 0x296 <TIMER0_delay>
				if(mode == Pedestrian) {
 588:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__data_end>
 58c:	81 30       	cpi	r24, 0x01	; 1
 58e:	19 f0       	breq	.+6      	; 0x596 <__EEPROM_REGION_LENGTH__+0x196>
			LED_on(LED_Car_Port,LED_Car_Green_Pin);
			LED_off(LED_Car_Port,LED_Car_red_pin);
			LED_off(LED_Car_Port,LED_Car_Yellow_pin);
			
			
			for (uint8_t i; i<150;i++){
 590:	cf 5f       	subi	r28, 0xFF	; 255
 592:	c6 39       	cpi	r28, 0x96	; 150
 594:	a8 f3       	brcs	.-22     	; 0x580 <__EEPROM_REGION_LENGTH__+0x180>
				if(mode == Pedestrian) {
					break;
				}
			}
			
			Car_prev_LED = green;
 596:	82 e0       	ldi	r24, 0x02	; 2
 598:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
			Car_LED = yellow;
 59c:	81 e0       	ldi	r24, 0x01	; 1
 59e:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <Car_LED>
			break;
 5a2:	62 c0       	rjmp	.+196    	; 0x668 <__EEPROM_REGION_LENGTH__+0x268>
			
			default:
			Car_LED = red;
 5a4:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <Car_LED>
			Car_prev_LED = yellow;
 5a8:	81 e0       	ldi	r24, 0x01	; 1
 5aa:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
			break;
 5ae:	5c c0       	rjmp	.+184    	; 0x668 <__EEPROM_REGION_LENGTH__+0x268>
			
		}

	}
	else {
		LED_off (LED_Pedestrian_Port,LED_Pedestrian_red_pin);
 5b0:	60 e0       	ldi	r22, 0x00	; 0
 5b2:	82 e4       	ldi	r24, 0x42	; 66
 5b4:	0e 94 45 01 	call	0x28a	; 0x28a <LED_off>
		LED_off (LED_Pedestrian_Port,LED_Pedestrian_Yellow_pin);
 5b8:	61 e0       	ldi	r22, 0x01	; 1
 5ba:	82 e4       	ldi	r24, 0x42	; 66
 5bc:	0e 94 45 01 	call	0x28a	; 0x28a <LED_off>
		LED_on (LED_Pedestrian_Port,LED_Pedestrian_Green_Pin);
 5c0:	62 e0       	ldi	r22, 0x02	; 2
 5c2:	82 e4       	ldi	r24, 0x42	; 66
 5c4:	0e 94 41 01 	call	0x282	; 0x282 <LED_on>
		
		LED_on(LED_Car_Port,LED_Car_red_pin);
 5c8:	60 e0       	ldi	r22, 0x00	; 0
 5ca:	81 e4       	ldi	r24, 0x41	; 65
 5cc:	0e 94 41 01 	call	0x282	; 0x282 <LED_on>
		LED_off(LED_Car_Port,LED_Car_Yellow_pin);
 5d0:	61 e0       	ldi	r22, 0x01	; 1
 5d2:	81 e4       	ldi	r24, 0x41	; 65
 5d4:	0e 94 45 01 	call	0x28a	; 0x28a <LED_off>
		LED_off(LED_Car_Port,LED_Car_Green_Pin);
 5d8:	62 e0       	ldi	r22, 0x02	; 2
 5da:	81 e4       	ldi	r24, 0x41	; 65
 5dc:	0e 94 45 01 	call	0x28a	; 0x28a <LED_off>
		
		TIMER0_delay(5000);
 5e0:	88 e8       	ldi	r24, 0x88	; 136
 5e2:	93 e1       	ldi	r25, 0x13	; 19
 5e4:	0e 94 4b 01 	call	0x296	; 0x296 <TIMER0_delay>
		
		LED_off(LED_Car_Port,LED_Car_red_pin);
 5e8:	60 e0       	ldi	r22, 0x00	; 0
 5ea:	81 e4       	ldi	r24, 0x41	; 65
 5ec:	0e 94 45 01 	call	0x28a	; 0x28a <LED_off>
		
		for (uint8_t i;i<5;i++){
 5f0:	25 c0       	rjmp	.+74     	; 0x63c <__EEPROM_REGION_LENGTH__+0x23c>
			LED_on(LED_Car_Port,LED_Car_Yellow_pin);
 5f2:	61 e0       	ldi	r22, 0x01	; 1
 5f4:	81 e4       	ldi	r24, 0x41	; 65
 5f6:	0e 94 41 01 	call	0x282	; 0x282 <LED_on>
			LED_on(LED_Pedestrian_Port,LED_Pedestrian_Yellow_pin);
 5fa:	61 e0       	ldi	r22, 0x01	; 1
 5fc:	82 e4       	ldi	r24, 0x42	; 66
 5fe:	0e 94 41 01 	call	0x282	; 0x282 <LED_on>
			TIMER0_delay(390);
 602:	86 e8       	ldi	r24, 0x86	; 134
 604:	91 e0       	ldi	r25, 0x01	; 1
 606:	0e 94 4b 01 	call	0x296	; 0x296 <TIMER0_delay>
			LED_off(LED_Car_Port,LED_Car_Yellow_pin);
 60a:	61 e0       	ldi	r22, 0x01	; 1
 60c:	81 e4       	ldi	r24, 0x41	; 65
 60e:	0e 94 45 01 	call	0x28a	; 0x28a <LED_off>
			LED_off(LED_Pedestrian_Port,LED_Pedestrian_Yellow_pin);
 612:	61 e0       	ldi	r22, 0x01	; 1
 614:	82 e4       	ldi	r24, 0x42	; 66
 616:	0e 94 45 01 	call	0x28a	; 0x28a <LED_off>
			TIMER0_delay(190);
 61a:	8e eb       	ldi	r24, 0xBE	; 190
 61c:	90 e0       	ldi	r25, 0x00	; 0
 61e:	0e 94 4b 01 	call	0x296	; 0x296 <TIMER0_delay>
			LED_on(LED_Car_Port,LED_Car_Yellow_pin);
 622:	61 e0       	ldi	r22, 0x01	; 1
 624:	81 e4       	ldi	r24, 0x41	; 65
 626:	0e 94 41 01 	call	0x282	; 0x282 <LED_on>
			LED_on(LED_Pedestrian_Port,LED_Pedestrian_Yellow_pin);
 62a:	61 e0       	ldi	r22, 0x01	; 1
 62c:	82 e4       	ldi	r24, 0x42	; 66
 62e:	0e 94 41 01 	call	0x282	; 0x282 <LED_on>
			TIMER0_delay(390);
 632:	86 e8       	ldi	r24, 0x86	; 134
 634:	91 e0       	ldi	r25, 0x01	; 1
 636:	0e 94 4b 01 	call	0x296	; 0x296 <TIMER0_delay>
		
		TIMER0_delay(5000);
		
		LED_off(LED_Car_Port,LED_Car_red_pin);
		
		for (uint8_t i;i<5;i++){
 63a:	df 5f       	subi	r29, 0xFF	; 255
 63c:	d5 30       	cpi	r29, 0x05	; 5
 63e:	c8 f2       	brcs	.-78     	; 0x5f2 <__EEPROM_REGION_LENGTH__+0x1f2>
			TIMER0_delay(190);
			LED_on(LED_Car_Port,LED_Car_Yellow_pin);
			LED_on(LED_Pedestrian_Port,LED_Pedestrian_Yellow_pin);
			TIMER0_delay(390);
		}
		LED_off(LED_Car_Port,LED_Car_Yellow_pin);
 640:	61 e0       	ldi	r22, 0x01	; 1
 642:	81 e4       	ldi	r24, 0x41	; 65
 644:	0e 94 45 01 	call	0x28a	; 0x28a <LED_off>
		LED_off(LED_Pedestrian_Port,LED_Pedestrian_Yellow_pin);
 648:	61 e0       	ldi	r22, 0x01	; 1
 64a:	82 e4       	ldi	r24, 0x42	; 66
 64c:	0e 94 45 01 	call	0x28a	; 0x28a <LED_off>
		
		LED_on(LED_Pedestrian_Port, LED_Pedestrian_red_pin);
 650:	60 e0       	ldi	r22, 0x00	; 0
 652:	82 e4       	ldi	r24, 0x42	; 66
 654:	0e 94 41 01 	call	0x282	; 0x282 <LED_on>
		
		mode = normal;
 658:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <__data_end>
		Car_LED = green;
 65c:	82 e0       	ldi	r24, 0x02	; 2
 65e:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <Car_LED>
		Car_prev_LED = yellow;
 662:	81 e0       	ldi	r24, 0x01	; 1
 664:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
	}
}
 668:	df 91       	pop	r29
 66a:	cf 91       	pop	r28
 66c:	1f 91       	pop	r17
 66e:	08 95       	ret

00000670 <__vector_1>:
ISR(EXT_INT_0){
 670:	1f 92       	push	r1
 672:	0f 92       	push	r0
 674:	0f b6       	in	r0, 0x3f	; 63
 676:	0f 92       	push	r0
 678:	11 24       	eor	r1, r1
 67a:	8f 93       	push	r24
	mode = Pedestrian;
 67c:	81 e0       	ldi	r24, 0x01	; 1
 67e:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__data_end>
}
 682:	8f 91       	pop	r24
 684:	0f 90       	pop	r0
 686:	0f be       	out	0x3f, r0	; 63
 688:	0f 90       	pop	r0
 68a:	1f 90       	pop	r1
 68c:	18 95       	reti

0000068e <main>:
#include "App/App.c"


void main(void)
{
	APP_init();
 68e:	0e 94 c7 01 	call	0x38e	; 0x38e <APP_init>

    while (1) 
    {
		APP_start();
 692:	0e 94 ed 01 	call	0x3da	; 0x3da <APP_start>
 696:	fd cf       	rjmp	.-6      	; 0x692 <main+0x4>

00000698 <__subsf3>:
 698:	50 58       	subi	r21, 0x80	; 128

0000069a <__addsf3>:
 69a:	bb 27       	eor	r27, r27
 69c:	aa 27       	eor	r26, r26
 69e:	0e 94 64 03 	call	0x6c8	; 0x6c8 <__addsf3x>
 6a2:	0c 94 ee 04 	jmp	0x9dc	; 0x9dc <__fp_round>
 6a6:	0e 94 e0 04 	call	0x9c0	; 0x9c0 <__fp_pscA>
 6aa:	38 f0       	brcs	.+14     	; 0x6ba <__addsf3+0x20>
 6ac:	0e 94 e7 04 	call	0x9ce	; 0x9ce <__fp_pscB>
 6b0:	20 f0       	brcs	.+8      	; 0x6ba <__addsf3+0x20>
 6b2:	39 f4       	brne	.+14     	; 0x6c2 <__addsf3+0x28>
 6b4:	9f 3f       	cpi	r25, 0xFF	; 255
 6b6:	19 f4       	brne	.+6      	; 0x6be <__addsf3+0x24>
 6b8:	26 f4       	brtc	.+8      	; 0x6c2 <__addsf3+0x28>
 6ba:	0c 94 dd 04 	jmp	0x9ba	; 0x9ba <__fp_nan>
 6be:	0e f4       	brtc	.+2      	; 0x6c2 <__addsf3+0x28>
 6c0:	e0 95       	com	r30
 6c2:	e7 fb       	bst	r30, 7
 6c4:	0c 94 ae 04 	jmp	0x95c	; 0x95c <__fp_inf>

000006c8 <__addsf3x>:
 6c8:	e9 2f       	mov	r30, r25
 6ca:	0e 94 ff 04 	call	0x9fe	; 0x9fe <__fp_split3>
 6ce:	58 f3       	brcs	.-42     	; 0x6a6 <__addsf3+0xc>
 6d0:	ba 17       	cp	r27, r26
 6d2:	62 07       	cpc	r22, r18
 6d4:	73 07       	cpc	r23, r19
 6d6:	84 07       	cpc	r24, r20
 6d8:	95 07       	cpc	r25, r21
 6da:	20 f0       	brcs	.+8      	; 0x6e4 <__addsf3x+0x1c>
 6dc:	79 f4       	brne	.+30     	; 0x6fc <__addsf3x+0x34>
 6de:	a6 f5       	brtc	.+104    	; 0x748 <__addsf3x+0x80>
 6e0:	0c 94 39 05 	jmp	0xa72	; 0xa72 <__fp_zero>
 6e4:	0e f4       	brtc	.+2      	; 0x6e8 <__addsf3x+0x20>
 6e6:	e0 95       	com	r30
 6e8:	0b 2e       	mov	r0, r27
 6ea:	ba 2f       	mov	r27, r26
 6ec:	a0 2d       	mov	r26, r0
 6ee:	0b 01       	movw	r0, r22
 6f0:	b9 01       	movw	r22, r18
 6f2:	90 01       	movw	r18, r0
 6f4:	0c 01       	movw	r0, r24
 6f6:	ca 01       	movw	r24, r20
 6f8:	a0 01       	movw	r20, r0
 6fa:	11 24       	eor	r1, r1
 6fc:	ff 27       	eor	r31, r31
 6fe:	59 1b       	sub	r21, r25
 700:	99 f0       	breq	.+38     	; 0x728 <__addsf3x+0x60>
 702:	59 3f       	cpi	r21, 0xF9	; 249
 704:	50 f4       	brcc	.+20     	; 0x71a <__addsf3x+0x52>
 706:	50 3e       	cpi	r21, 0xE0	; 224
 708:	68 f1       	brcs	.+90     	; 0x764 <__addsf3x+0x9c>
 70a:	1a 16       	cp	r1, r26
 70c:	f0 40       	sbci	r31, 0x00	; 0
 70e:	a2 2f       	mov	r26, r18
 710:	23 2f       	mov	r18, r19
 712:	34 2f       	mov	r19, r20
 714:	44 27       	eor	r20, r20
 716:	58 5f       	subi	r21, 0xF8	; 248
 718:	f3 cf       	rjmp	.-26     	; 0x700 <__addsf3x+0x38>
 71a:	46 95       	lsr	r20
 71c:	37 95       	ror	r19
 71e:	27 95       	ror	r18
 720:	a7 95       	ror	r26
 722:	f0 40       	sbci	r31, 0x00	; 0
 724:	53 95       	inc	r21
 726:	c9 f7       	brne	.-14     	; 0x71a <__addsf3x+0x52>
 728:	7e f4       	brtc	.+30     	; 0x748 <__addsf3x+0x80>
 72a:	1f 16       	cp	r1, r31
 72c:	ba 0b       	sbc	r27, r26
 72e:	62 0b       	sbc	r22, r18
 730:	73 0b       	sbc	r23, r19
 732:	84 0b       	sbc	r24, r20
 734:	ba f0       	brmi	.+46     	; 0x764 <__addsf3x+0x9c>
 736:	91 50       	subi	r25, 0x01	; 1
 738:	a1 f0       	breq	.+40     	; 0x762 <__addsf3x+0x9a>
 73a:	ff 0f       	add	r31, r31
 73c:	bb 1f       	adc	r27, r27
 73e:	66 1f       	adc	r22, r22
 740:	77 1f       	adc	r23, r23
 742:	88 1f       	adc	r24, r24
 744:	c2 f7       	brpl	.-16     	; 0x736 <__addsf3x+0x6e>
 746:	0e c0       	rjmp	.+28     	; 0x764 <__addsf3x+0x9c>
 748:	ba 0f       	add	r27, r26
 74a:	62 1f       	adc	r22, r18
 74c:	73 1f       	adc	r23, r19
 74e:	84 1f       	adc	r24, r20
 750:	48 f4       	brcc	.+18     	; 0x764 <__addsf3x+0x9c>
 752:	87 95       	ror	r24
 754:	77 95       	ror	r23
 756:	67 95       	ror	r22
 758:	b7 95       	ror	r27
 75a:	f7 95       	ror	r31
 75c:	9e 3f       	cpi	r25, 0xFE	; 254
 75e:	08 f0       	brcs	.+2      	; 0x762 <__addsf3x+0x9a>
 760:	b0 cf       	rjmp	.-160    	; 0x6c2 <__addsf3+0x28>
 762:	93 95       	inc	r25
 764:	88 0f       	add	r24, r24
 766:	08 f0       	brcs	.+2      	; 0x76a <__addsf3x+0xa2>
 768:	99 27       	eor	r25, r25
 76a:	ee 0f       	add	r30, r30
 76c:	97 95       	ror	r25
 76e:	87 95       	ror	r24
 770:	08 95       	ret

00000772 <ceil>:
 772:	0e 94 21 05 	call	0xa42	; 0xa42 <__fp_trunc>
 776:	90 f0       	brcs	.+36     	; 0x79c <ceil+0x2a>
 778:	9f 37       	cpi	r25, 0x7F	; 127
 77a:	48 f4       	brcc	.+18     	; 0x78e <ceil+0x1c>
 77c:	91 11       	cpse	r25, r1
 77e:	16 f4       	brtc	.+4      	; 0x784 <ceil+0x12>
 780:	0c 94 3a 05 	jmp	0xa74	; 0xa74 <__fp_szero>
 784:	60 e0       	ldi	r22, 0x00	; 0
 786:	70 e0       	ldi	r23, 0x00	; 0
 788:	80 e8       	ldi	r24, 0x80	; 128
 78a:	9f e3       	ldi	r25, 0x3F	; 63
 78c:	08 95       	ret
 78e:	26 f0       	brts	.+8      	; 0x798 <ceil+0x26>
 790:	1b 16       	cp	r1, r27
 792:	61 1d       	adc	r22, r1
 794:	71 1d       	adc	r23, r1
 796:	81 1d       	adc	r24, r1
 798:	0c 94 b4 04 	jmp	0x968	; 0x968 <__fp_mintl>
 79c:	0c 94 cf 04 	jmp	0x99e	; 0x99e <__fp_mpack>

000007a0 <__divsf3>:
 7a0:	0e 94 e4 03 	call	0x7c8	; 0x7c8 <__divsf3x>
 7a4:	0c 94 ee 04 	jmp	0x9dc	; 0x9dc <__fp_round>
 7a8:	0e 94 e7 04 	call	0x9ce	; 0x9ce <__fp_pscB>
 7ac:	58 f0       	brcs	.+22     	; 0x7c4 <__divsf3+0x24>
 7ae:	0e 94 e0 04 	call	0x9c0	; 0x9c0 <__fp_pscA>
 7b2:	40 f0       	brcs	.+16     	; 0x7c4 <__divsf3+0x24>
 7b4:	29 f4       	brne	.+10     	; 0x7c0 <__divsf3+0x20>
 7b6:	5f 3f       	cpi	r21, 0xFF	; 255
 7b8:	29 f0       	breq	.+10     	; 0x7c4 <__divsf3+0x24>
 7ba:	0c 94 ae 04 	jmp	0x95c	; 0x95c <__fp_inf>
 7be:	51 11       	cpse	r21, r1
 7c0:	0c 94 3a 05 	jmp	0xa74	; 0xa74 <__fp_szero>
 7c4:	0c 94 dd 04 	jmp	0x9ba	; 0x9ba <__fp_nan>

000007c8 <__divsf3x>:
 7c8:	0e 94 ff 04 	call	0x9fe	; 0x9fe <__fp_split3>
 7cc:	68 f3       	brcs	.-38     	; 0x7a8 <__divsf3+0x8>

000007ce <__divsf3_pse>:
 7ce:	99 23       	and	r25, r25
 7d0:	b1 f3       	breq	.-20     	; 0x7be <__divsf3+0x1e>
 7d2:	55 23       	and	r21, r21
 7d4:	91 f3       	breq	.-28     	; 0x7ba <__divsf3+0x1a>
 7d6:	95 1b       	sub	r25, r21
 7d8:	55 0b       	sbc	r21, r21
 7da:	bb 27       	eor	r27, r27
 7dc:	aa 27       	eor	r26, r26
 7de:	62 17       	cp	r22, r18
 7e0:	73 07       	cpc	r23, r19
 7e2:	84 07       	cpc	r24, r20
 7e4:	38 f0       	brcs	.+14     	; 0x7f4 <__divsf3_pse+0x26>
 7e6:	9f 5f       	subi	r25, 0xFF	; 255
 7e8:	5f 4f       	sbci	r21, 0xFF	; 255
 7ea:	22 0f       	add	r18, r18
 7ec:	33 1f       	adc	r19, r19
 7ee:	44 1f       	adc	r20, r20
 7f0:	aa 1f       	adc	r26, r26
 7f2:	a9 f3       	breq	.-22     	; 0x7de <__divsf3_pse+0x10>
 7f4:	35 d0       	rcall	.+106    	; 0x860 <__stack+0x1>
 7f6:	0e 2e       	mov	r0, r30
 7f8:	3a f0       	brmi	.+14     	; 0x808 <__DATA_REGION_LENGTH__+0x8>
 7fa:	e0 e8       	ldi	r30, 0x80	; 128
 7fc:	32 d0       	rcall	.+100    	; 0x862 <__stack+0x3>
 7fe:	91 50       	subi	r25, 0x01	; 1
 800:	50 40       	sbci	r21, 0x00	; 0
 802:	e6 95       	lsr	r30
 804:	00 1c       	adc	r0, r0
 806:	ca f7       	brpl	.-14     	; 0x7fa <__divsf3_pse+0x2c>
 808:	2b d0       	rcall	.+86     	; 0x860 <__stack+0x1>
 80a:	fe 2f       	mov	r31, r30
 80c:	29 d0       	rcall	.+82     	; 0x860 <__stack+0x1>
 80e:	66 0f       	add	r22, r22
 810:	77 1f       	adc	r23, r23
 812:	88 1f       	adc	r24, r24
 814:	bb 1f       	adc	r27, r27
 816:	26 17       	cp	r18, r22
 818:	37 07       	cpc	r19, r23
 81a:	48 07       	cpc	r20, r24
 81c:	ab 07       	cpc	r26, r27
 81e:	b0 e8       	ldi	r27, 0x80	; 128
 820:	09 f0       	breq	.+2      	; 0x824 <__DATA_REGION_LENGTH__+0x24>
 822:	bb 0b       	sbc	r27, r27
 824:	80 2d       	mov	r24, r0
 826:	bf 01       	movw	r22, r30
 828:	ff 27       	eor	r31, r31
 82a:	93 58       	subi	r25, 0x83	; 131
 82c:	5f 4f       	sbci	r21, 0xFF	; 255
 82e:	3a f0       	brmi	.+14     	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
 830:	9e 3f       	cpi	r25, 0xFE	; 254
 832:	51 05       	cpc	r21, r1
 834:	78 f0       	brcs	.+30     	; 0x854 <__DATA_REGION_LENGTH__+0x54>
 836:	0c 94 ae 04 	jmp	0x95c	; 0x95c <__fp_inf>
 83a:	0c 94 3a 05 	jmp	0xa74	; 0xa74 <__fp_szero>
 83e:	5f 3f       	cpi	r21, 0xFF	; 255
 840:	e4 f3       	brlt	.-8      	; 0x83a <__DATA_REGION_LENGTH__+0x3a>
 842:	98 3e       	cpi	r25, 0xE8	; 232
 844:	d4 f3       	brlt	.-12     	; 0x83a <__DATA_REGION_LENGTH__+0x3a>
 846:	86 95       	lsr	r24
 848:	77 95       	ror	r23
 84a:	67 95       	ror	r22
 84c:	b7 95       	ror	r27
 84e:	f7 95       	ror	r31
 850:	9f 5f       	subi	r25, 0xFF	; 255
 852:	c9 f7       	brne	.-14     	; 0x846 <__DATA_REGION_LENGTH__+0x46>
 854:	88 0f       	add	r24, r24
 856:	91 1d       	adc	r25, r1
 858:	96 95       	lsr	r25
 85a:	87 95       	ror	r24
 85c:	97 f9       	bld	r25, 7
 85e:	08 95       	ret
 860:	e1 e0       	ldi	r30, 0x01	; 1
 862:	66 0f       	add	r22, r22
 864:	77 1f       	adc	r23, r23
 866:	88 1f       	adc	r24, r24
 868:	bb 1f       	adc	r27, r27
 86a:	62 17       	cp	r22, r18
 86c:	73 07       	cpc	r23, r19
 86e:	84 07       	cpc	r24, r20
 870:	ba 07       	cpc	r27, r26
 872:	20 f0       	brcs	.+8      	; 0x87c <__stack+0x1d>
 874:	62 1b       	sub	r22, r18
 876:	73 0b       	sbc	r23, r19
 878:	84 0b       	sbc	r24, r20
 87a:	ba 0b       	sbc	r27, r26
 87c:	ee 1f       	adc	r30, r30
 87e:	88 f7       	brcc	.-30     	; 0x862 <__stack+0x3>
 880:	e0 95       	com	r30
 882:	08 95       	ret

00000884 <__fixunssfsi>:
 884:	0e 94 07 05 	call	0xa0e	; 0xa0e <__fp_splitA>
 888:	88 f0       	brcs	.+34     	; 0x8ac <__fixunssfsi+0x28>
 88a:	9f 57       	subi	r25, 0x7F	; 127
 88c:	98 f0       	brcs	.+38     	; 0x8b4 <__fixunssfsi+0x30>
 88e:	b9 2f       	mov	r27, r25
 890:	99 27       	eor	r25, r25
 892:	b7 51       	subi	r27, 0x17	; 23
 894:	b0 f0       	brcs	.+44     	; 0x8c2 <__fixunssfsi+0x3e>
 896:	e1 f0       	breq	.+56     	; 0x8d0 <__fixunssfsi+0x4c>
 898:	66 0f       	add	r22, r22
 89a:	77 1f       	adc	r23, r23
 89c:	88 1f       	adc	r24, r24
 89e:	99 1f       	adc	r25, r25
 8a0:	1a f0       	brmi	.+6      	; 0x8a8 <__fixunssfsi+0x24>
 8a2:	ba 95       	dec	r27
 8a4:	c9 f7       	brne	.-14     	; 0x898 <__fixunssfsi+0x14>
 8a6:	14 c0       	rjmp	.+40     	; 0x8d0 <__fixunssfsi+0x4c>
 8a8:	b1 30       	cpi	r27, 0x01	; 1
 8aa:	91 f0       	breq	.+36     	; 0x8d0 <__fixunssfsi+0x4c>
 8ac:	0e 94 39 05 	call	0xa72	; 0xa72 <__fp_zero>
 8b0:	b1 e0       	ldi	r27, 0x01	; 1
 8b2:	08 95       	ret
 8b4:	0c 94 39 05 	jmp	0xa72	; 0xa72 <__fp_zero>
 8b8:	67 2f       	mov	r22, r23
 8ba:	78 2f       	mov	r23, r24
 8bc:	88 27       	eor	r24, r24
 8be:	b8 5f       	subi	r27, 0xF8	; 248
 8c0:	39 f0       	breq	.+14     	; 0x8d0 <__fixunssfsi+0x4c>
 8c2:	b9 3f       	cpi	r27, 0xF9	; 249
 8c4:	cc f3       	brlt	.-14     	; 0x8b8 <__fixunssfsi+0x34>
 8c6:	86 95       	lsr	r24
 8c8:	77 95       	ror	r23
 8ca:	67 95       	ror	r22
 8cc:	b3 95       	inc	r27
 8ce:	d9 f7       	brne	.-10     	; 0x8c6 <__fixunssfsi+0x42>
 8d0:	3e f4       	brtc	.+14     	; 0x8e0 <__fixunssfsi+0x5c>
 8d2:	90 95       	com	r25
 8d4:	80 95       	com	r24
 8d6:	70 95       	com	r23
 8d8:	61 95       	neg	r22
 8da:	7f 4f       	sbci	r23, 0xFF	; 255
 8dc:	8f 4f       	sbci	r24, 0xFF	; 255
 8de:	9f 4f       	sbci	r25, 0xFF	; 255
 8e0:	08 95       	ret

000008e2 <__floatunsisf>:
 8e2:	e8 94       	clt
 8e4:	09 c0       	rjmp	.+18     	; 0x8f8 <__floatsisf+0x12>

000008e6 <__floatsisf>:
 8e6:	97 fb       	bst	r25, 7
 8e8:	3e f4       	brtc	.+14     	; 0x8f8 <__floatsisf+0x12>
 8ea:	90 95       	com	r25
 8ec:	80 95       	com	r24
 8ee:	70 95       	com	r23
 8f0:	61 95       	neg	r22
 8f2:	7f 4f       	sbci	r23, 0xFF	; 255
 8f4:	8f 4f       	sbci	r24, 0xFF	; 255
 8f6:	9f 4f       	sbci	r25, 0xFF	; 255
 8f8:	99 23       	and	r25, r25
 8fa:	a9 f0       	breq	.+42     	; 0x926 <__floatsisf+0x40>
 8fc:	f9 2f       	mov	r31, r25
 8fe:	96 e9       	ldi	r25, 0x96	; 150
 900:	bb 27       	eor	r27, r27
 902:	93 95       	inc	r25
 904:	f6 95       	lsr	r31
 906:	87 95       	ror	r24
 908:	77 95       	ror	r23
 90a:	67 95       	ror	r22
 90c:	b7 95       	ror	r27
 90e:	f1 11       	cpse	r31, r1
 910:	f8 cf       	rjmp	.-16     	; 0x902 <__floatsisf+0x1c>
 912:	fa f4       	brpl	.+62     	; 0x952 <__floatsisf+0x6c>
 914:	bb 0f       	add	r27, r27
 916:	11 f4       	brne	.+4      	; 0x91c <__floatsisf+0x36>
 918:	60 ff       	sbrs	r22, 0
 91a:	1b c0       	rjmp	.+54     	; 0x952 <__floatsisf+0x6c>
 91c:	6f 5f       	subi	r22, 0xFF	; 255
 91e:	7f 4f       	sbci	r23, 0xFF	; 255
 920:	8f 4f       	sbci	r24, 0xFF	; 255
 922:	9f 4f       	sbci	r25, 0xFF	; 255
 924:	16 c0       	rjmp	.+44     	; 0x952 <__floatsisf+0x6c>
 926:	88 23       	and	r24, r24
 928:	11 f0       	breq	.+4      	; 0x92e <__floatsisf+0x48>
 92a:	96 e9       	ldi	r25, 0x96	; 150
 92c:	11 c0       	rjmp	.+34     	; 0x950 <__floatsisf+0x6a>
 92e:	77 23       	and	r23, r23
 930:	21 f0       	breq	.+8      	; 0x93a <__floatsisf+0x54>
 932:	9e e8       	ldi	r25, 0x8E	; 142
 934:	87 2f       	mov	r24, r23
 936:	76 2f       	mov	r23, r22
 938:	05 c0       	rjmp	.+10     	; 0x944 <__floatsisf+0x5e>
 93a:	66 23       	and	r22, r22
 93c:	71 f0       	breq	.+28     	; 0x95a <__floatsisf+0x74>
 93e:	96 e8       	ldi	r25, 0x86	; 134
 940:	86 2f       	mov	r24, r22
 942:	70 e0       	ldi	r23, 0x00	; 0
 944:	60 e0       	ldi	r22, 0x00	; 0
 946:	2a f0       	brmi	.+10     	; 0x952 <__floatsisf+0x6c>
 948:	9a 95       	dec	r25
 94a:	66 0f       	add	r22, r22
 94c:	77 1f       	adc	r23, r23
 94e:	88 1f       	adc	r24, r24
 950:	da f7       	brpl	.-10     	; 0x948 <__floatsisf+0x62>
 952:	88 0f       	add	r24, r24
 954:	96 95       	lsr	r25
 956:	87 95       	ror	r24
 958:	97 f9       	bld	r25, 7
 95a:	08 95       	ret

0000095c <__fp_inf>:
 95c:	97 f9       	bld	r25, 7
 95e:	9f 67       	ori	r25, 0x7F	; 127
 960:	80 e8       	ldi	r24, 0x80	; 128
 962:	70 e0       	ldi	r23, 0x00	; 0
 964:	60 e0       	ldi	r22, 0x00	; 0
 966:	08 95       	ret

00000968 <__fp_mintl>:
 968:	88 23       	and	r24, r24
 96a:	71 f4       	brne	.+28     	; 0x988 <__fp_mintl+0x20>
 96c:	77 23       	and	r23, r23
 96e:	21 f0       	breq	.+8      	; 0x978 <__fp_mintl+0x10>
 970:	98 50       	subi	r25, 0x08	; 8
 972:	87 2b       	or	r24, r23
 974:	76 2f       	mov	r23, r22
 976:	07 c0       	rjmp	.+14     	; 0x986 <__fp_mintl+0x1e>
 978:	66 23       	and	r22, r22
 97a:	11 f4       	brne	.+4      	; 0x980 <__fp_mintl+0x18>
 97c:	99 27       	eor	r25, r25
 97e:	0d c0       	rjmp	.+26     	; 0x99a <__fp_mintl+0x32>
 980:	90 51       	subi	r25, 0x10	; 16
 982:	86 2b       	or	r24, r22
 984:	70 e0       	ldi	r23, 0x00	; 0
 986:	60 e0       	ldi	r22, 0x00	; 0
 988:	2a f0       	brmi	.+10     	; 0x994 <__fp_mintl+0x2c>
 98a:	9a 95       	dec	r25
 98c:	66 0f       	add	r22, r22
 98e:	77 1f       	adc	r23, r23
 990:	88 1f       	adc	r24, r24
 992:	da f7       	brpl	.-10     	; 0x98a <__fp_mintl+0x22>
 994:	88 0f       	add	r24, r24
 996:	96 95       	lsr	r25
 998:	87 95       	ror	r24
 99a:	97 f9       	bld	r25, 7
 99c:	08 95       	ret

0000099e <__fp_mpack>:
 99e:	9f 3f       	cpi	r25, 0xFF	; 255
 9a0:	31 f0       	breq	.+12     	; 0x9ae <__fp_mpack_finite+0xc>

000009a2 <__fp_mpack_finite>:
 9a2:	91 50       	subi	r25, 0x01	; 1
 9a4:	20 f4       	brcc	.+8      	; 0x9ae <__fp_mpack_finite+0xc>
 9a6:	87 95       	ror	r24
 9a8:	77 95       	ror	r23
 9aa:	67 95       	ror	r22
 9ac:	b7 95       	ror	r27
 9ae:	88 0f       	add	r24, r24
 9b0:	91 1d       	adc	r25, r1
 9b2:	96 95       	lsr	r25
 9b4:	87 95       	ror	r24
 9b6:	97 f9       	bld	r25, 7
 9b8:	08 95       	ret

000009ba <__fp_nan>:
 9ba:	9f ef       	ldi	r25, 0xFF	; 255
 9bc:	80 ec       	ldi	r24, 0xC0	; 192
 9be:	08 95       	ret

000009c0 <__fp_pscA>:
 9c0:	00 24       	eor	r0, r0
 9c2:	0a 94       	dec	r0
 9c4:	16 16       	cp	r1, r22
 9c6:	17 06       	cpc	r1, r23
 9c8:	18 06       	cpc	r1, r24
 9ca:	09 06       	cpc	r0, r25
 9cc:	08 95       	ret

000009ce <__fp_pscB>:
 9ce:	00 24       	eor	r0, r0
 9d0:	0a 94       	dec	r0
 9d2:	12 16       	cp	r1, r18
 9d4:	13 06       	cpc	r1, r19
 9d6:	14 06       	cpc	r1, r20
 9d8:	05 06       	cpc	r0, r21
 9da:	08 95       	ret

000009dc <__fp_round>:
 9dc:	09 2e       	mov	r0, r25
 9de:	03 94       	inc	r0
 9e0:	00 0c       	add	r0, r0
 9e2:	11 f4       	brne	.+4      	; 0x9e8 <__fp_round+0xc>
 9e4:	88 23       	and	r24, r24
 9e6:	52 f0       	brmi	.+20     	; 0x9fc <__fp_round+0x20>
 9e8:	bb 0f       	add	r27, r27
 9ea:	40 f4       	brcc	.+16     	; 0x9fc <__fp_round+0x20>
 9ec:	bf 2b       	or	r27, r31
 9ee:	11 f4       	brne	.+4      	; 0x9f4 <__fp_round+0x18>
 9f0:	60 ff       	sbrs	r22, 0
 9f2:	04 c0       	rjmp	.+8      	; 0x9fc <__fp_round+0x20>
 9f4:	6f 5f       	subi	r22, 0xFF	; 255
 9f6:	7f 4f       	sbci	r23, 0xFF	; 255
 9f8:	8f 4f       	sbci	r24, 0xFF	; 255
 9fa:	9f 4f       	sbci	r25, 0xFF	; 255
 9fc:	08 95       	ret

000009fe <__fp_split3>:
 9fe:	57 fd       	sbrc	r21, 7
 a00:	90 58       	subi	r25, 0x80	; 128
 a02:	44 0f       	add	r20, r20
 a04:	55 1f       	adc	r21, r21
 a06:	59 f0       	breq	.+22     	; 0xa1e <__fp_splitA+0x10>
 a08:	5f 3f       	cpi	r21, 0xFF	; 255
 a0a:	71 f0       	breq	.+28     	; 0xa28 <__fp_splitA+0x1a>
 a0c:	47 95       	ror	r20

00000a0e <__fp_splitA>:
 a0e:	88 0f       	add	r24, r24
 a10:	97 fb       	bst	r25, 7
 a12:	99 1f       	adc	r25, r25
 a14:	61 f0       	breq	.+24     	; 0xa2e <__fp_splitA+0x20>
 a16:	9f 3f       	cpi	r25, 0xFF	; 255
 a18:	79 f0       	breq	.+30     	; 0xa38 <__fp_splitA+0x2a>
 a1a:	87 95       	ror	r24
 a1c:	08 95       	ret
 a1e:	12 16       	cp	r1, r18
 a20:	13 06       	cpc	r1, r19
 a22:	14 06       	cpc	r1, r20
 a24:	55 1f       	adc	r21, r21
 a26:	f2 cf       	rjmp	.-28     	; 0xa0c <__fp_split3+0xe>
 a28:	46 95       	lsr	r20
 a2a:	f1 df       	rcall	.-30     	; 0xa0e <__fp_splitA>
 a2c:	08 c0       	rjmp	.+16     	; 0xa3e <__fp_splitA+0x30>
 a2e:	16 16       	cp	r1, r22
 a30:	17 06       	cpc	r1, r23
 a32:	18 06       	cpc	r1, r24
 a34:	99 1f       	adc	r25, r25
 a36:	f1 cf       	rjmp	.-30     	; 0xa1a <__fp_splitA+0xc>
 a38:	86 95       	lsr	r24
 a3a:	71 05       	cpc	r23, r1
 a3c:	61 05       	cpc	r22, r1
 a3e:	08 94       	sec
 a40:	08 95       	ret

00000a42 <__fp_trunc>:
 a42:	0e 94 07 05 	call	0xa0e	; 0xa0e <__fp_splitA>
 a46:	a0 f0       	brcs	.+40     	; 0xa70 <__fp_trunc+0x2e>
 a48:	be e7       	ldi	r27, 0x7E	; 126
 a4a:	b9 17       	cp	r27, r25
 a4c:	88 f4       	brcc	.+34     	; 0xa70 <__fp_trunc+0x2e>
 a4e:	bb 27       	eor	r27, r27
 a50:	9f 38       	cpi	r25, 0x8F	; 143
 a52:	60 f4       	brcc	.+24     	; 0xa6c <__fp_trunc+0x2a>
 a54:	16 16       	cp	r1, r22
 a56:	b1 1d       	adc	r27, r1
 a58:	67 2f       	mov	r22, r23
 a5a:	78 2f       	mov	r23, r24
 a5c:	88 27       	eor	r24, r24
 a5e:	98 5f       	subi	r25, 0xF8	; 248
 a60:	f7 cf       	rjmp	.-18     	; 0xa50 <__fp_trunc+0xe>
 a62:	86 95       	lsr	r24
 a64:	77 95       	ror	r23
 a66:	67 95       	ror	r22
 a68:	b1 1d       	adc	r27, r1
 a6a:	93 95       	inc	r25
 a6c:	96 39       	cpi	r25, 0x96	; 150
 a6e:	c8 f3       	brcs	.-14     	; 0xa62 <__fp_trunc+0x20>
 a70:	08 95       	ret

00000a72 <__fp_zero>:
 a72:	e8 94       	clt

00000a74 <__fp_szero>:
 a74:	bb 27       	eor	r27, r27
 a76:	66 27       	eor	r22, r22
 a78:	77 27       	eor	r23, r23
 a7a:	cb 01       	movw	r24, r22
 a7c:	97 f9       	bld	r25, 7
 a7e:	08 95       	ret

00000a80 <__gesf2>:
 a80:	0e 94 45 05 	call	0xa8a	; 0xa8a <__fp_cmp>
 a84:	08 f4       	brcc	.+2      	; 0xa88 <__gesf2+0x8>
 a86:	8f ef       	ldi	r24, 0xFF	; 255
 a88:	08 95       	ret

00000a8a <__fp_cmp>:
 a8a:	99 0f       	add	r25, r25
 a8c:	00 08       	sbc	r0, r0
 a8e:	55 0f       	add	r21, r21
 a90:	aa 0b       	sbc	r26, r26
 a92:	e0 e8       	ldi	r30, 0x80	; 128
 a94:	fe ef       	ldi	r31, 0xFE	; 254
 a96:	16 16       	cp	r1, r22
 a98:	17 06       	cpc	r1, r23
 a9a:	e8 07       	cpc	r30, r24
 a9c:	f9 07       	cpc	r31, r25
 a9e:	c0 f0       	brcs	.+48     	; 0xad0 <__fp_cmp+0x46>
 aa0:	12 16       	cp	r1, r18
 aa2:	13 06       	cpc	r1, r19
 aa4:	e4 07       	cpc	r30, r20
 aa6:	f5 07       	cpc	r31, r21
 aa8:	98 f0       	brcs	.+38     	; 0xad0 <__fp_cmp+0x46>
 aaa:	62 1b       	sub	r22, r18
 aac:	73 0b       	sbc	r23, r19
 aae:	84 0b       	sbc	r24, r20
 ab0:	95 0b       	sbc	r25, r21
 ab2:	39 f4       	brne	.+14     	; 0xac2 <__fp_cmp+0x38>
 ab4:	0a 26       	eor	r0, r26
 ab6:	61 f0       	breq	.+24     	; 0xad0 <__fp_cmp+0x46>
 ab8:	23 2b       	or	r18, r19
 aba:	24 2b       	or	r18, r20
 abc:	25 2b       	or	r18, r21
 abe:	21 f4       	brne	.+8      	; 0xac8 <__fp_cmp+0x3e>
 ac0:	08 95       	ret
 ac2:	0a 26       	eor	r0, r26
 ac4:	09 f4       	brne	.+2      	; 0xac8 <__fp_cmp+0x3e>
 ac6:	a1 40       	sbci	r26, 0x01	; 1
 ac8:	a6 95       	lsr	r26
 aca:	8f ef       	ldi	r24, 0xFF	; 255
 acc:	81 1d       	adc	r24, r1
 ace:	81 1d       	adc	r24, r1
 ad0:	08 95       	ret

00000ad2 <_exit>:
 ad2:	f8 94       	cli

00000ad4 <__stop_program>:
 ad4:	ff cf       	rjmp	.-2      	; 0xad4 <__stop_program>
